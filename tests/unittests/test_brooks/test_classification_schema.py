from brooks.classifications import UnifiedClassificationScheme
from brooks.types import AreaType


class TestClassificationSchema:
    def test_area_types_per_level(self):
        result = UnifiedClassificationScheme().area_types_per_level(
            level=UnifiedClassificationScheme.AREA_TYPE_LEVELS.BASE_AREA_TYPE_LEVEL
        )

        assert result == {
            AreaType.ARCADE,
            AreaType.BALCONY,
            AreaType.BASEMENT_COMPARTMENT,
            AreaType.BASEMENT,
            AreaType.BATHROOM,
            AreaType.BEDROOM,
            AreaType.BIKE_STORAGE,
            AreaType.CARPARK,
            AreaType.CORRIDOR,
            AreaType.DINING,
            AreaType.ELEVATOR,
            AreaType.WASTEWATER,
            AreaType.WATER_SUPPLY,
            AreaType.HEATING,
            AreaType.GAS,
            AreaType.ELECTRICAL_SUPPLY,
            AreaType.TELECOMMUNICATIONS,
            AreaType.AIR,
            AreaType.ELEVATOR_FACILITIES,
            AreaType.OPERATIONS_FACILITIES,
            AreaType.FOYER,
            AreaType.GARAGE,
            AreaType.GARDEN,
            AreaType.COMMUNITY_ROOM,
            AreaType.BREAK_ROOM,
            AreaType.WAITING_ROOM,
            AreaType.CANTEEN,
            AreaType.PRISON_CELL,
            AreaType.OFFICE_SPACE,
            AreaType.OPEN_PLAN_OFFICE,
            AreaType.MEETING_ROOM,
            AreaType.DESIGN_ROOM,
            AreaType.COUNTER_ROOM,
            AreaType.CONTROL_ROOM,
            AreaType.RECEPTION_ROOM,
            AreaType.OFFICE_TECH_ROOM,
            AreaType.FACTORY_ROOM,
            AreaType.WORKSHOP,
            AreaType.TECHNICAL_LAB,
            AreaType.PHYSICS_LAB,
            AreaType.CHEMICAL_LAB,
            AreaType.LIVESTOCK,
            AreaType.PLANTS,
            AreaType.COMMON_KITCHEN,
            AreaType.SPECIAL_WORKSPACE,
            AreaType.WAREHOUSE,
            AreaType.ARCHIVE,
            AreaType.COLD_STORAGE,
            AreaType.LOGISTICS,
            AreaType.SALESROOM,
            AreaType.EXHIBITION,
            AreaType.TEACHING_ROOM,
            AreaType.FLEXIBLE_TEACHING_ROOM,
            AreaType.DEDICATED_TEACHING_ROOM,
            AreaType.LIBRARY,
            AreaType.SPORTS_ROOMS,
            AreaType.ASSEMBLY_HALL,
            AreaType.STAGE_ROOM,
            AreaType.SHOWROOM,
            AreaType.CHAPEL,
            AreaType.MEDICAL_ROOM,
            AreaType.DEDICATED_MEDICAL_ROOM,
            AreaType.SURGERY_ROOM,
            AreaType.RADIATION_DIAGNOSIS,
            AreaType.RADATION_THERAPY,
            AreaType.PHYSIO_AND_REHABILITATION,
            AreaType.MEDICAL_BEDROOM,
            AreaType.DEDICATED_MEDICAL_BEDROOM,
            AreaType.KITCHEN_DINING,
            AreaType.KITCHEN,
            AreaType.LIGHTWELL,
            AreaType.LIVING_DINING,
            AreaType.LIVING_ROOM,
            AreaType.LOBBY,
            AreaType.LOGGIA,
            AreaType.SANITARY_ROOMS,
            AreaType.CLOAKROOM,
            AreaType.PASSENGER_PLATFORM,
            AreaType.HOUSE_TECHNICS_FACILITIES,
            AreaType.SHELTER,
            AreaType.MOTORCYCLE_PARKING,
            AreaType.OFFICE,
            AreaType.OIL_TANK,
            AreaType.OUTDOOR_VOID,
            AreaType.PATIO,
            AreaType.PRAM_AND_BIKE_STORAGE_ROOM,
            AreaType.PRAM,
            AreaType.ROOM,
            AreaType.SHAFT,
            AreaType.STAIRCASE,
            AreaType.STOREROOM,
            AreaType.STUDIO,
            AreaType.TECHNICAL_AREA,
            AreaType.TERRACE,
            AreaType.CORRIDORS_AND_HALLS,
            AreaType.TRANSPORT_SHAFT,
            AreaType.VEHICLE_TRAFFIC_AREA,
            AreaType.VOID,
            AreaType.WASH_AND_DRY_ROOM,
            AreaType.WINTERGARTEN,
        }

    def test_ph_mapping_area_names(self):
        area_types_without_mappings = {
            x.name for x in UnifiedClassificationScheme().ROOM_VECTOR_NAMING.keys()
        }.symmetric_difference(
            {x.name for x in UnifiedClassificationScheme().leaf_area_types}
        )

        assert area_types_without_mappings == {
            AreaType.ARCADE.name,
            AreaType.BASEMENT_COMPARTMENT.name,
            AreaType.BASEMENT.name,
            AreaType.BIKE_STORAGE.name,
            AreaType.BUF10_1_AUSSEN_PP_FAHRZEUG.name,
            AreaType.BUF10_2_UEBERDACHTE_AUSSEN_PP_FAHRZEUG.name,
            AreaType.BUF10_3_AUSSEN_PP_MOTO.name,
            AreaType.BUF10_4_AUSSEN_PP_FAHRRAD.name,
            AreaType.BUF10_5_BEARB__AUSSENFLAECHE.name,
            AreaType.CARPARK.name,
            AreaType.ELEVATOR.name,
            AreaType.FOYER.name,
            AreaType.GARAGE.name,
            AreaType.GARDEN.name,
            AreaType.LIGHTWELL.name,
            AreaType.LOBBY.name,
            AreaType.NOT_DEFINED.name,
            AreaType.OIL_TANK.name,
            AreaType.OUTDOOR_VOID.name,
            AreaType.PATIO.name,
            AreaType.PRAM_AND_BIKE_STORAGE_ROOM.name,
            AreaType.PRAM.name,
            AreaType.SHAFT.name,
            AreaType.STUDIO.name,
            AreaType.TECHNICAL_AREA.name,
            AreaType.TERRACE.name,
            AreaType.UUF11_1_UNBEARB__AUSSENFLAECHE.name,
            AreaType.VOID.name,
            AreaType.WASH_AND_DRY_ROOM.name,
        }
